- name: Set token variable (if runner specific)
  set_fact:
    runner_registration_token: '{{ first_repo_to_register_to.token }}'
  when: not ( ( ansible_gitlab_global_registration_token is defined ) and ( ansible_gitlab_global_registration_token|d('') != '' ) )
  no_log: True

- name: Set token variable (if global)
  set_fact:
    runner_registration_token: '{{ ansible_gitlab_global_registration_token }}'
  when: ( ansible_gitlab_global_registration_token is defined ) and ( ansible_gitlab_global_registration_token|d('') != '' )

- name: Prepair post message for runner registration
  set_fact:
    cacheable: false
    registration_post:
      description: '{{ ansible_gitlab_runner.description|d("") }}'
      info:
        architecture: '{{ runner_version_information.OS_Arch.split("/")[1] }}'
        features:
          cache: false
          features: false
          services: false
          shared: false
          variables: false
        name: '{{ ansible_gitlab_runner.name }}'
        platform: '{{ runner_version_information.OS_Arch.split("/")[0] }}'
        revision: >-
          {{ runner_version_information.Git_Revision }}{{ ('-' +
          runner_version_information.Git_Branch + '-' +
          runner_version_information.Built|replace(':', '-')) if
          "" != runner_version_information.Git_Branch|d("") else '' }}
        version: '{{ runner_version_information.Version }}'
      locked: False # Set later on to correct state.
      run_untagged: '{{ ansible_gitlab_runner.run_untagged|d(True) }}'
      tag_list: '{{ ansible_gitlab_runner_final_tag_list }}'
      token: '{{ runner_registration_token }}'
      active: true
      maximum_timeout: '{{ ansible_gitlab_runner.maximum_timeout|d(600) }}'

- name: Register runner
  uri:
    url: '{{ gitlab_runner__runners_api_url }}'
    method: POST
    status_code: 201
    body_format: json
    body: '{{ registration_post }}'
  register: newly_registered_runner
  changed_when: true

- name: Save local configuration
  template:
    src: etc/gitlab-runner/config.toml.j2
    dest: '{{ ansible_gitlab_runner_project_directory }}/etc/config.toml'
    owner: root
    group: root
    mode: '0444'
  with_items: '{{ [ newly_registered_runner.json ] }}'
  notify: restart gitlab-runner
